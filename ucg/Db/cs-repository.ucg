.template on
using System;
using System.Collections.Generic;
using System.Data.Common;
using BusterWood.Mapper;

namespace $(../@cs-namespace:p)
{
	public class $(@name:p)Repository
	{
		readonly Func<DbConnection> _connectionFactory;

		public $(@name:p)Repository(Func<DbConnection> connectionFactory) 
		{
			_connectionFactory = connectionFactory;
		}
.foreach field[@pk]

		public $(../@name:p) SelectBy$(@name:p)($(@type) $(@name:c))
		{
			using (var cnn = _connectionFactory()) 
			{
				return cnn.QueryProc("dbo.$(../@name:sql)_SelectBy_$(@name:sql)", new { $(@name:sql) = $(@name:c) }).SingleOrDefault<$(../@name:p)>();
			}
		}
.end
.foreach field[@fk-rel]

		public List<$(../@name:p)> SelectBy$(@name:p)($(@type) $(@name:c))
		{
			using (var cnn = _connectionFactory()) 
			{
				return cnn.QueryProc("dbo.$(../@name:sql)_SelectBy_$(@name:sql)", new { $(@name:sql) = $(@name:c) }).ToList<$(../@name:p)>();
			}
		}
.end

		public $(@name:p) Insert($(@name:p) item)
		{
			using (var cnn = _connectionFactory()) 
			{
				var args = new 
				{
.foreach field
					$(@name:sql) = $(@name:c)$(",")
.end
				};
				return cnn.QueryProc("dbo.$(@name:sql)_Insert", args).Single<$(@name:p)>();
			}
		}

		public $(@name:p) Update($(@name:p) item)
		{
			using (var cnn = _connectionFactory()) 
			{
				var args = new 
				{
.foreach field
					$(@name:sql) = $(@name:c)$(",")
.end
				};
				return cnn.QueryProc("dbo.$(@name:sql)_Update", args).SingleOrDefault<$(@name:p)>();
			}
		}

.foreach field[@pk]

		public void DeleteBy$(@name:p)($(@type) $(@name:c))
		{
			using (var cnn = _connectionFactory()) 
			{
				cnn.ExecuteProc("dbo.$(../@name:sql)_DeleteBy_$(@name:sql)", new { $(@name:sql) = $(@name:c) });
			}
		}
.end
.foreach field[@fk-rel]

		public void DeleteBy$(@name:p)($(@type) $(@name:c))
		{
			using (var cnn = _connectionFactory()) 
			{
				cnn.ExecuteProc("dbo.$(../@name:sql)_DeleteBy_$(@name:sql)", new { $(@name:sql) = $(@name:c) });
			}
		}
.end
	}
}
